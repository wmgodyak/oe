<?php
namespace modules\sitemap\controllers;

use system\core\EventsHandler;
use system\Front;
use system\models\ContentTypes;
use system\models\Languages;
use system\models\Settings;

/**
 * Class Sitemap
 * @name Sitemap generator
 * @description
 * @author Volodymyr Hodyak
 * @version 1.0
 * @package modules\sitemap\controllers
 */
class Sitemap extends Front
{
    private $types;
    private $langs = [];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        EventsHandler::getInstance()->add('system.cron.run', [$this, 'generate']);
    }

    public function generate()
    {
        $ct = new ContentTypes();
        $types = Settings::getInstance()->get('modules.Sitemap.config.types');

        foreach ($types as $k=>$type) {
            if($type['id'] == 0){
                unset($types[$k]);
                continue;
            }
            $types[$k]['data'] = $ct->getData($type['id']);
        }

        $this->types = $types;

        $l = new Languages();

        $this->langs = $l->get();

        if($this->combited()){
            foreach ($types as $type) {
                if($type['data']['parent_id'] == 0){
                    $this->byType($type);
                }
            }
        }
    }

    private function combited()
    {
        $host = APPURL; $path = DOCROOT . 'sitemap.xml'; $d = date('Y-m-d');

        if(file_exists($path)) unlink($path);

        file_put_contents($path, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">", FILE_APPEND);
        foreach ($this->types as $type) {
            file_put_contents($path,  "
    <sitemap>
        <loc>{$host}sitemap-{$type['data']['type']}.xml</loc>
        <lastmod>{$d}</lastmod>
    </sitemap>", FILE_APPEND);
        }

        file_put_contents($path, "\n</sitemapindex>", FILE_APPEND);

        return true;
    }

    private function byType($type)
    {
        $path = DOCROOT . "sitemap-{$type['data']['type']}.xml";

        if(file_exists($path)) unlink($path);

        $types_id = ($type['data']['parent_id'] > 0) ? $type['data']['parent_id'] : $type['data']['id'];
        $sub_types_id = $type['data']['id'];

        $sm = new \modules\sitemap\models\Sitemap();
        file_put_contents($path, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>", FILE_APPEND);
        file_put_contents($path, "<urlset xmlns=\"http://www.google.com/schemas/sitemap/0.90\">", FILE_APPEND);
        $this->writeTree($path, $type, $sm, $types_id, 0, $sub_types_id);
        file_put_contents($path, "</urlset>", FILE_APPEND);
    }

    private function writeTree($path, $type, $sm, $types_id, $parent_id, $sub_types_id)
    {
        foreach ($this->langs as $lang) {
            foreach ($sm->tree($lang['id'], $types_id, $parent_id, $sub_types_id) as $item) {

                if( $item['subtypes_id'] > 0 && !isset($this->types[$item['subtypes_id']])){
                    continue;
                }

                if( $item['subtypes_id'] > 0 ){
                    $type = $this->types[$item['subtypes_id']];
                }

                $url = APPURL;

                if($lang['is_main'] != 1){
                    $url .= "{$lang['code']}/";
                }

                $url .= $item['url'];

                file_put_contents($path, "
<url>
    <loc>{$url}</loc>
    <lastmod>{$item['published']}</lastmod>
    <changefreq>{$type['changefreq']}</changefreq>
    <priority>{$type['priority']}</priority>
</url>", FILE_APPEND);

                if($item['isfolder']){
                    $this->writeTree($path, $type, $sm, $item['types_id'], $item['id'], $item['subtypes_id']);
                }
            }
        }
    }

}