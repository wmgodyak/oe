<?php
/**
 * OYiEngine 7
 * @author Volodymyr Hodiak mailto:support@otakoi.com
 * @copyright Copyright (c) 2015 Otakoyi.com
 * Date: 05.02.16 : 16:42
 */

namespace models\engine;

use models\Engine;

defined("CPATH") or die();

/**
 * Class ContentTypes
 * @package models\engine
 */
class ContentTypes extends Engine
{
    /**
     * @param $id
     * @param string $key
     * @return array|mixed
     */
    public function getData($id, $key= '*')
    {
        $d = self::$db->select("select {$key} from content_type where id={$id} limit 1")->row($key);
        if(isset($d['settings']) && !empty($d['settings'])) $d['settings'] = unserialize($d['settings']);

        return $d;
    }

    /**
     * @param $data
     * @return bool|string
     */
    public function create($data)
    {
        $s = parent::createRow('content_type', $data);
        if($s>0 && $data['parent_id'] > 0){
            self::$db->update('content_type', ['isfolder'=>1], "id={$data['parent_id']} limit 1");
        }
        return $s;
    }

    /**
     * @param $id
     * @param $data
     * @return bool
     */
    public function update($id, $data)
    {
        return parent::updateRow('content_type', $id, $data);
    }

    public function delete($id)
    {
        $data = $this->getData($id);

        $s = parent::deleteRow('content_type', $id); // TODO: Change the autogenerated stub

        if($s > 0 && $data['parent_id'] > 0){
            if(! $this->hasChildren($data['parent_id'])){
                parent::updateRow('content_type', $data['parent_id'], ['isfolder' => 0]);
            }
        }

        return $s;
    }

    public function hasChildren($id)
    {
        return self::$db
            ->select("select count(id) as t from content_type where parent_id={$id}")
            ->row('t') > 0;
    }

    public function issetTemplate($parent_id, $type, $id = null)
    {
        $parent_id = (int)$parent_id;
        return self::$db->select("
            select id
            from content_type
            where parent_id={$parent_id} and type='{$type}' ". ($id ? " and id <> $id" : '') ." limit 1")
            ->row('id');
    }
}